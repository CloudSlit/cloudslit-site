[{"id":0,"href":"/cloudslit_docs/cloudslit/cloudslit-client/architecture/overview/","title":"OverView","section":"Architecture","content":" OverView # "},{"id":1,"href":"/cloudslit_docs/cloudslit/cloudslit-contracts/architecture/overview/","title":"OverView","section":"Architecture","content":" OverView # "},{"id":2,"href":"/cloudslit_docs/cloudslit/cloudslit-fullnode/architecture/overview/","title":"OverView","section":"Architecture","content":" OverView # "},{"id":3,"href":"/cloudslit_docs/cloudslit/cloudslit-provider/architecture/overview/","title":"OverView","section":"Architecture","content":" OverView # "},{"id":4,"href":"/cloudslit_docs/cloudslit/cloudslit-verifier/architecture/overview/","title":"OverView","section":"Architecture","content":" OverView # "},{"id":5,"href":"/cloudslit_docs/cloudslit/deca/architecture/overview/","title":"OverView","section":"Architecture","content":" OverView # 公钥基础设施(PKI)是一种解决认证最广泛接受的加密协议，用于实现 web上的安全通信。PKI包括由认证机构(ca)管理的数字证书，以验证用户的身份，从而提供安全的通信渠道。然而，传统的 PKI 方法存在多个认证中心节点之间难以相互信任、单点失效、效率低等问题。CA的集中式操作模式导致了许多有针对性的攻击，如中间人攻击。在本文中，DECA的目标是使 CA 池完全去中心化，同时构建高性能的 DPKI 认证体系，实现 DPKI 去中心化解决方案。\nDECA 利用去中心化身份标识(DID)和可验证声明(身份凭证)两大基础模块，定义了身份标识符格式，描述文档以及身份凭证的生成、出示、验证和销毁等流程，覆盖了身份和凭证管理的完整生命周期，利用去中心化信任管理技术，提供链上存储和链下存储。最佳实践是在链上存储少量数据（例如 id、状态等），同时在链下（例如 IPFS）存储大量数据（例如公钥、身份验证方法等），并将它们组合起来通过链上数据的存储哈希，通过构建线下数据crdt一致性存储，构建发行者、验证者等组件角色实现去中心化认证计算。\n该去中心化认证协议通过验证证书的哈希值而不是签名来提高在线跨域身份认证交易的效率。通过将证书的生成过程及其 hash 的存储过程放在注册操作中，减少了 Verifier 和 CA 的认证过程，进一步提高了效率。\n"},{"id":6,"href":"/cloudslit_docs/cloudslit/cloudslit-client/architecture/network/","title":"NetWork","section":"Architecture","content":" NetWork Details # "},{"id":7,"href":"/cloudslit_docs/cloudslit/cloudslit-fullnode/architecture/network/","title":"NetWork","section":"Architecture","content":" NetWork Details # "},{"id":8,"href":"/cloudslit_docs/cloudslit/cloudslit-provider/architecture/network/","title":"NetWork","section":"Architecture","content":" NetWork Details # "},{"id":9,"href":"/cloudslit_docs/cloudslit/cloudslit-verifier/architecture/network/","title":"NetWork","section":"Architecture","content":" NetWork Details # "},{"id":10,"href":"/cloudslit_docs/cloudslit/deca/architecture/network/","title":"NetWork","section":"Architecture","content":" NetWork Details # DECA 利用去中心化身份标识(DID)和可验证声明(身份凭证)，支持关键 PKI 功能，利用线下存储(IPFS)不可篡改的特性，有效防止第三方攻击，利用IPFS-CRDT同步策略，增强隐匿共享，快速同步，利用区块链进行少量基本信息的同步，大量减少了共识成本。\n"},{"id":11,"href":"/cloudslit_docs/cloudslit/cloudslit-client/architecture/storage/","title":"Storage","section":"Architecture","content":" Storage Engine Details # "},{"id":12,"href":"/cloudslit_docs/cloudslit/cloudslit-contracts/architecture/storage/","title":"Storage","section":"Architecture","content":" Storage Engine Details # "},{"id":13,"href":"/cloudslit_docs/cloudslit/cloudslit-fullnode/architecture/storage/","title":"Storage","section":"Architecture","content":" Storage Engine Details # "},{"id":14,"href":"/cloudslit_docs/cloudslit/cloudslit-provider/architecture/storage/","title":"Storage","section":"Architecture","content":" Storage Engine Details # "},{"id":15,"href":"/cloudslit_docs/cloudslit/cloudslit-verifier/architecture/storage/","title":"Storage","section":"Architecture","content":" Storage Engine Details # "},{"id":16,"href":"/cloudslit_docs/cloudslit/deca/architecture/storage/","title":"Storage","section":"Architecture","content":" Storage Engine Details # 中心化存储数据集中化，涉及的数据量更大，使得数据更易受到攻击和泄露。中心化存储数据的安全性、隐私性和可持续性都存在一定风险。\n数据的安全包含两层含义：第一层是“可以保证数据隐私不泄漏”，第二层是“可以保证数据的完整不丢失”。\n在当前的中心化存储模式下，用户将敏感数据全部上传，不但使用户失去了对自己数据的掌控权，还将数据泄漏的风险转移到云存储运营商一侧。如果这些隐私信息发生数据丢失、损坏、泄露、或被盗用，可能导致个人，企业乃至整个社会的重大损失。\n中心化的云存储运营商可能因各种原因停止服务，而用户却无法对控制服务商的行为和掌握自身利益的权利。这就造成用户往往倾向于将数据存储在规模更大、更有信用的服务商处，使头部公司的数据集中化程度越来越高，这也造成了数据一旦丢失将存在大面积丢失的情况。\n而DECA 实现了基于IPFS和web3.storage的去中心化存储方式，构建完整的，统一的数据对象适配层，更好的利用数据中间件的方式，将数据进行封装，加密，加密密钥由用户主体来控制，最后将数据存储在去中心化存储系统中，保证了数据隐私不泄漏，利用ipfs的特性，可以保证数据的完整性，再利用crdt技术实现最终一致性，crdt同步的数据并非是证书元数据，只同步去中心化存储标识，具有高性能，稳定性高的特性。\n"},{"id":17,"href":"/cloudslit_docs/cloudslit/vocabulary/","title":"Vocabulary","section":"Overview","content":" Vocabulary # The main terms used in CloudSlit products are listed below.\n"},{"id":18,"href":"/cloudslit_docs/cloudslit/cloudslit-client/architecture/protocol/","title":"Protocol","section":"Architecture","content":" Protocol Details # "},{"id":19,"href":"/cloudslit_docs/cloudslit/cloudslit-contracts/architecture/protocol/","title":"Protocol","section":"Architecture","content":" Protocol Details # "},{"id":20,"href":"/cloudslit_docs/cloudslit/cloudslit-fullnode/architecture/protocol/","title":"Protocol","section":"Architecture","content":" Protocol Details # "},{"id":21,"href":"/cloudslit_docs/cloudslit/cloudslit-provider/architecture/protocol/","title":"Protocol","section":"Architecture","content":" Protocol Details # "},{"id":22,"href":"/cloudslit_docs/cloudslit/cloudslit-verifier/architecture/protocol/","title":"Protocol","section":"Architecture","content":" Protocol Details # "},{"id":23,"href":"/cloudslit_docs/cloudslit/deca/architecture/protocol/","title":"Protocol","section":"Architecture","content":" Protocol Details # 目前的证书体系通过公钥的安全传递来保护在线通信，这些密钥与身份相对应，它使用相应的秘密私钥来解密发送给它们的消息，并证明它们发送了消息(通过用私钥签名)。另外用户不能确定他们的通信没有被允许 MITM(中间人)攻击的欺诈性证书损害，这些攻击很难检测。\nDECA 的目标是确保没有任何第三方能够破坏整个系统的完整性和安全性，通过使用去中心化数据存储达成共识的技术，完全能够支持提供类似或更高级安全属性。\nDECA 构建了验证者的存在，但他们的作用仅限于确保通信安全性和完整性，通过利用去中心化存储中的标识符，经过一系列算法，允许以安全的方式全局读取这些值，这种方式不易受到在 PKI 中可能出现的 MITM 攻击。这是通过将去中心化标识符的查找值链接到该标识符的最新和最正确的公钥来实现的。 "},{"id":24,"href":"/cloudslit_docs/cloudslit/deca/architecture/","title":"Architecture","section":"DeCA","content":" 摘要 # 公钥基础设施(PKI)是一种解决认证最广泛接受的加密协议，用于实现 web上的安全通信。PKI包括由认证机构(ca)管理的数字证书，以验证用户的身份，从而提供安全的通信渠道。然而，传统的 PKI 方法存在多个认证中心节点之间难以相互信任、单点失效、效率低等问题。CA的集中式操作模式导致了许多有针对性的攻击，如中间人攻击。在本文中，DECA的目标是使 CA 池完全去中心化，同时构建高性能的 DPKI 认证体系，实现 DPKI 去中心化解决方案。\nDECA 利用去中心化身份标识(DID)和可验证声明(身份凭证)两大基础模块，定义了身份标识符格式，描述文档以及身份凭证的生成、出示、验证和销毁等流程，覆盖了身份和凭证管理的完整生命周期，利用去中心化信任管理技术，提供链上存储和链下存储。最佳实践是在链上存储少量数据（例如 id、状态等），同时在链下（例如 IPFS）存储大量数据（例如公钥、身份验证方法等），并将它们组合起来通过链上数据的存储哈希，通过构建线下数据crdt一致性存储，构建发行者、验证者等组件角色实现去中心化认证计算。\n该去中心化认证协议通过验证证书的哈希值而不是签名来提高在线跨域身份认证交易的效率。通过将证书的生成过程及其 hash 的存储过程放在注册操作中，减少了 Verifier 和 CA 的认证过程，进一步提高了效率。\n架构 # DECA 利用去中心化身份标识(DID)和可验证声明(身份凭证)，支持关键 PKI 功能，利用线下存储(IPFS)不可篡改的特性，有效防止第三方攻击，利用IPFS-CRDT同步策略，增强隐匿共享，快速同步，利用区块链进行少量基本信息的同步，大量减少了共识成本。\n去中心化存储 # 中心化存储数据集中化，涉及的数据量更大，使得数据更易受到攻击和泄露。中心化存储数据的安全性、隐私性和可持续性都存在一定风险。\n数据的安全包含两层含义：第一层是“可以保证数据隐私不泄漏”，第二层是“可以保证数据的完整不丢失”。\n在当前的中心化存储模式下，用户将敏感数据全部上传，不但使用户失去了对自己数据的掌控权，还将数据泄漏的风险转移到云存储运营商一侧。如果这些隐私信息发生数据丢失、损坏、泄露、或被盗用，可能导致个人，企业乃至整个社会的重大损失。\n中心化的云存储运营商可能因各种原因停止服务，而用户却无法对控制服务商的行为和掌握自身利益的权利。这就造成用户往往倾向于将数据存储在规模更大、更有信用的服务商处，使头部公司的数据集中化程度越来越高，这也造成了数据一旦丢失将存在大面积丢失的情况。\n而DECA 实现了基于IPFS和web3.storage的去中心化存储方式，构建完整的，统一的数据对象适配层，更好的利用数据中间件的方式，将数据进行封装，加密，加密密钥由用户主体来控制，最后将数据存储在去中心化存储系统中，保证了数据隐私不泄漏，利用ipfs的特性，可以保证数据的完整性，再利用crdt技术实现最终一致性，crdt同步的数据并非是证书元数据，只同步去中心化存储标识，具有高性能，稳定性高的特性。\n去中心化计算 # 目前的证书体系通过公钥的安全传递来保护在线通信，这些密钥与身份相对应，它使用相应的秘密私钥来解密发送给它们的消息，并证明它们发送了消息(通过用私钥签名)。另外用户不能确定他们的通信没有被允许 MITM(中间人)攻击的欺诈性证书损害，这些攻击很难检测。\nDECA 的目标是确保没有任何第三方能够破坏整个系统的完整性和安全性，通过使用去中心化数据存储达成共识的技术，完全能够支持提供类似或更高级安全属性。\nDECA 构建了验证者的存在，但他们的作用仅限于确保通信安全性和完整性，通过利用去中心化存储中的标识符，经过一系列算法，允许以安全的方式全局读取这些值，这种方式不易受到在 PKI 中可能出现的 MITM 攻击。这是通过将去中心化标识符的查找值链接到该标识符的最新和最正确的公钥来实现的。 部署 # "},{"id":25,"href":"/cloudslit_docs/cloudslit/cloudslit-fullnode/quick_start/","title":"Quick Start","section":"CloudSlit-Fullnode","content":" Quick Start # "},{"id":26,"href":"/cloudslit_docs/cloudslit/","title":"Overview","section":"CloudSlit","content":" CloudSlit - Private retrieval of data # Inspiration # At present, the options available for interactive (low-latency) communication with privacy guarantee are very limited, and the solutions developed so far all focus on the traditional web model of single source data publisher, and it has defects in delay and threat models.\nCloudSlit uses blockchain, web3 and secure network technology of private data retrieval to enhance and improve network security/privacy protection of users\u0026rsquo; privatization.\nIn order to protect the public\u0026rsquo;s network security under web2, a very popular zero-trust security architecture has emerged. Our team has been working on open source products with zero trust security, but we found that although many zero trust network security companies provide zero trust security platforms, they monopolize users\u0026rsquo; network access nodes and centrally store users\u0026rsquo; core security profiles. Therefore, we are considering whether we can use web3 technology to realize a secure network for private data retrieval. We designed CloudSlit project to provide users with a decentralized secure network platform for private data retrieval, and help users master their own secure data.\nIts value # CloudSlit aims to build a decentralized private data retrieval security network system of web3 in the world, and help users recapture the privacy security information eroded by giants under web2, so that the current global hot zero-trust security network technology combined with web3 can better help users master their own security privacy data and give users a good experience of private data retrieval security network products.\nHow do we build it? # The design part of CloudSlit project includes distributed full-nodes, network miner provider, intelligent contract, network quality checker and network client program. The details are as follows:\nPart Ⅰ: CloudSlit-Fullnode (Ful nodes of private data retrieval network based on DAO Tools) # Anyone can run Fullnode, which hosts the metadata of decentralized network and provides metadata networking and transaction matching platform. It integrates metadata from all providers, and providers use libp2p-based pubsub every few seconds to keep heartbeat to Fullnode to prove that they are online.\nUsers can find resources and nodes to build their own secure anonymous network tunnel. They only need to pay some tokens, and the provider nodes can get these tokens as rewards.\nFor all users\u0026rsquo; and Dao\u0026rsquo;s data, we use Filecoin\u0026rsquo;s web3.storage to store user data in a decentralized way.\nPart Ⅱ: CloudSlit-Provider (Network Miner, a Secure Network Tunnel Provider for Decentralized Data Private Retrieval) # Our nodes are automatically networked through kademlia DHT and IPFS networks of libp2p through peer discovery and routing, and data synchronization among multiple nodes is realized through PubSub function of libp2p.\nFor all users and Dao data, we use web3.storage of Filecoin to store user data in a decentralized way.\nPart Ⅲ: CloudSlit-Contracts (support:EVM Chains) # We provide a complete smart contract for the decentralized trusted bandwidth market. Our smart contract is deployed on the EVM network, and we provide many methods in the smart contract to ensure a safe trading process and a safe trading environment.\nPart Ⅳ: CloudSlit-verifier (Decentralized network quality checker) # We provide the verifier component for the decentralized trusted bandwidth market. Anyone can run the network verifier, monitor the network quality of ongoing orders, and detect and punish illegal and bad network providers.\nPart Ⅴ: DeCA (Decentralized PKI CA center) # Decentralize PKI CA center to provide communication authentication infrastructure for Dao point-to-point communication.\nPart Ⅵ: CloudSlit-Client (client for private data retrieval.) # A client user connects to a provider to establish a network security tunnel for private data retrieval.\nThanks supports # Protocol Labs Filecoin Nervos "},{"id":27,"href":"/cloudslit_docs/cloudslit/cloudslit-fullnode/tutorials/","title":"Tutorials","section":"CloudSlit-Fullnode","content":" Tutorials # "},{"id":28,"href":"/cloudslit_docs/cloudslit/cloudslit-fullnode/deploy/","title":"Deploy","section":"CloudSlit-Fullnode","content":" Deploy # "},{"id":29,"href":"/cloudslit_docs/cloudslit/cloudslit-fullnode/develop/","title":"Develop","section":"CloudSlit-Fullnode","content":" Develop # "},{"id":30,"href":"/cloudslit_docs/cloudslit/faqs/","title":"FAQs","section":"Overview","content":" FAQs # "},{"id":31,"href":"/cloudslit_docs/cloudslit/news/","title":"News","section":"Overview","content":" Record the bits and pieces of cloudslit. # "}]